#------------------------------------------------------------------------------#
# This makefile was generated by 'cbp2make' tool rev.147                       #
#------------------------------------------------------------------------------#


WORKDIR = `pwd`

CC = gcc
CXX = g++
AR = ar
LD = g++
WINDRES = windres

INC = 
CFLAGS = -Wall
RESINC = 
LIBDIR = 
LIB = 
LDFLAGS = 

INC_RELEASE = $(INC)
CFLAGS_RELEASE = $(CFLAGS) -O2 -DNOVERBOSE
RESINC_RELEASE = $(RESINC)
RCFLAGS_RELEASE = $(RCFLAGS)
LIBDIR_RELEASE = $(LIBDIR)
LIB_RELEASE = $(LIB)
LDFLAGS_RELEASE = $(LDFLAGS) -s
OBJDIR_RELEASE = obj/Release
DEP_RELEASE = 
OUT_RELEASE = bin/Release/mod2vgm

OBJ_RELEASE = $(OBJDIR_RELEASE)/chip_opl4.o $(OBJDIR_RELEASE)/fileio.o $(OBJDIR_RELEASE)/format_mod.o $(OBJDIR_RELEASE)/helper.o $(OBJDIR_RELEASE)/main.o $(OBJDIR_RELEASE)/player.o $(OBJDIR_RELEASE)/vgm.o

all: debug release

clean: clean_debug clean_release

before_release: 
	test -d bin/Release || mkdir -p bin/Release
	test -d $(OBJDIR_RELEASE) || mkdir -p $(OBJDIR_RELEASE)

after_release: 

release: before_release out_release after_release

out_release: before_release $(OBJ_RELEASE) $(DEP_RELEASE)
	$(LD) $(LIBDIR_RELEASE) -o $(OUT_RELEASE) $(OBJ_RELEASE)  $(LDFLAGS_RELEASE) $(LIB_RELEASE)

$(OBJDIR_RELEASE)/chip_opl4.o: chip_opl4.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c chip_opl4.c -o $(OBJDIR_RELEASE)/chip_opl4.o

$(OBJDIR_RELEASE)/fileio.o: fileio.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c fileio.c -o $(OBJDIR_RELEASE)/fileio.o

$(OBJDIR_RELEASE)/format_mod.o: format_mod.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c format_mod.c -o $(OBJDIR_RELEASE)/format_mod.o

$(OBJDIR_RELEASE)/helper.o: helper.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c helper.c -o $(OBJDIR_RELEASE)/helper.o

$(OBJDIR_RELEASE)/main.o: main.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c main.c -o $(OBJDIR_RELEASE)/main.o

$(OBJDIR_RELEASE)/player.o: player.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c player.c -o $(OBJDIR_RELEASE)/player.o

$(OBJDIR_RELEASE)/vgm.o: vgm.c
	$(CC) $(CFLAGS_RELEASE) $(INC_RELEASE) -c vgm.c -o $(OBJDIR_RELEASE)/vgm.o

clean_release: 
	rm -f $(OBJ_RELEASE) $(OUT_RELEASE)
	rm -rf bin/Release
	rm -rf $(OBJDIR_RELEASE)

.PHONY: before_release after_release clean_release

